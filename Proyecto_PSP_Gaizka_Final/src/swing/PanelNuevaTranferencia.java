/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package swing;

import clases.Cuenta;
import clases.Transferencia;

import javax.crypto.*;
import javax.swing.*;
import java.awt.*;
import java.io.*;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 *
 * @author omega
 */
public class PanelNuevaTranferencia extends javax.swing.JPanel {
    private ObjectInputStream ois;
    private ObjectOutputStream oos;
    private SecretKey key;
    private JPanel content;

    /**
     * Creates new form PanelNuevaTranferencia
     */
    public PanelNuevaTranferencia(ObjectInputStream ois, ObjectOutputStream oos, SecretKey key, JPanel content) {
        initComponents();
        this.ois = ois;
        this.oos = oos;
        this.key = key;
        this.content = content;

        try {
            //mandamos la opcin para cargar el combobox con datos
            oos.writeObject(3);
            //recuperamos la lista de cuentas y la cargamos en el combobox
            byte[] cuentasEncriptadas = (byte[]) ois.readObject();
            Cipher desCipher = Cipher.getInstance("DES");
            desCipher.init(Cipher.DECRYPT_MODE, key);
            byte[] cuentasBytes = desCipher.doFinal(cuentasEncriptadas);
            ByteArrayInputStream bis = new ByteArrayInputStream(cuentasBytes);
            ObjectInputStream oisbytes = new ObjectInputStream(bis);
            List<Cuenta> cuentas = (List<Cuenta>) oisbytes.readObject();
            bis.close();
            oisbytes.close();
            for (Cuenta cuenta : cuentas) {
                jComboBox1.addItem(cuenta.getNumero());
            }
        } catch (NoSuchPaddingException | IllegalBlockSizeException | IOException | BadPaddingException e) {
            JOptionPane.showMessageDialog(null, "ERROR inesperado.");
        } catch (NoSuchAlgorithmException e) {
            JOptionPane.showMessageDialog(null, "No se ha especificado el algoritmo.");
        } catch (InvalidKeyException e) {
            JOptionPane.showMessageDialog(null, "La llave no es la correcta.");
        } catch (ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, "No se han podido cargar los datos por que no se han podido castear.");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        destinoField = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cantidadField = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        descripcionField = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        botonAnadir1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 204));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("TRANSFERENCIA");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 830, 40));

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Origen:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 160, 330, 30));

        add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 160, 250, -1));

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Destino:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 210, 330, 30));

        destinoField.setBackground(new java.awt.Color(204, 204, 204));
        destinoField.setForeground(new java.awt.Color(0, 0, 0));
        destinoField.setBorder(null);
        add(destinoField, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 210, 250, 30));
        add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 240, 250, -1));

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Cantidad:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 260, 330, 30));

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Descripcion:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 310, 330, 30));

        cantidadField.setBackground(new java.awt.Color(204, 204, 204));
        cantidadField.setForeground(new java.awt.Color(0, 0, 0));
        cantidadField.setBorder(null);
        add(cantidadField, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 260, 250, 30));
        add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 290, 250, -1));

        descripcionField.setBackground(new java.awt.Color(204, 204, 204));
        descripcionField.setForeground(new java.awt.Color(0, 0, 0));
        descripcionField.setBorder(null);
        add(descripcionField, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 310, 260, 30));
        add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 340, 250, -1));

        botonAnadir1.setBackground(new java.awt.Color(57, 57, 58));
        botonAnadir1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                botonAnadir1MousePressed(evt);
            }
        });

        jLabel7.setForeground(new java.awt.Color(219, 219, 219));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Realizar Transferencia");

        javax.swing.GroupLayout botonAnadir1Layout = new javax.swing.GroupLayout(botonAnadir1);
        botonAnadir1.setLayout(botonAnadir1Layout);
        botonAnadir1Layout.setHorizontalGroup(
            botonAnadir1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
        );
        botonAnadir1Layout.setVerticalGroup(
            botonAnadir1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        add(botonAnadir1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 410, 160, 50));
    }// </editor-fold>//GEN-END:initComponents

    private void botonAnadir1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonAnadir1MousePressed
        try {
            //comprobamos que la cantidad sea un valor numerico
            double cantidad = Double.parseDouble(cantidadField.getText());
            if (!destinoField.getText().isBlank() && !descripcionField.getText().isBlank()) {
                Pattern pattern  = Pattern.compile("^([A-Za-z]{2}[0-9]{2} [0-9]{4} [0-9]{2} [0-9]{10})$");
                Matcher matcher = pattern.matcher(destinoField.getText());
                if (matcher.find()) {
                    //mandamos la opcion seleccionada
                    oos.writeObject(5);
                    String ncuentadestino = jComboBox1.getSelectedItem().toString();
                    Transferencia transferencia = new Transferencia(ncuentadestino, destinoField.getText(), cantidad, descripcionField.getText());
                    ByteArrayOutputStream bos = new ByteArrayOutputStream();
                    ObjectOutputStream oosbytes = new ObjectOutputStream(bos);
                    oosbytes.writeObject(transferencia);
                    oosbytes.flush();
                    byte[] transferenciabytes = bos.toByteArray();
                    Cipher desCipher = Cipher.getInstance("DES");
                    //configuramos modo encriptar y ciframos
                    desCipher.init(Cipher.ENCRYPT_MODE, key);
                    byte[] transferenciaCifrado = desCipher.doFinal(transferenciabytes);
                    //enviamos objeto cifrado
                    oos.writeObject(transferenciaCifrado);
                    PanelCodigo frame = new PanelCodigo(ois, oos, key, content);
                    frame.setSize(830, 550);
                    frame.setLocation(0, 0);
                    content.removeAll();
                    content.add(frame, BorderLayout.CENTER);
                    content.revalidate();
                    content.repaint();
                    JFrame movil = new VentanaMobil(ois, oos, key);
                    movil.setVisible(true);
                } else {
                    JOptionPane.showMessageDialog(null, "La cuenta esta mal escrita ej. AA00 0000 00 0000000000");
                }
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "La cantidad esta mal escrita comprueba que es un valor numerico.");
        } catch (IOException | BadPaddingException | IllegalBlockSizeException | NoSuchPaddingException ex) {
            JOptionPane.showMessageDialog(null, "ERROR inesperado.");
        } catch (NoSuchAlgorithmException ex) {
            JOptionPane.showMessageDialog(null, "No se ha especificado el algoritmo.");
        } catch (InvalidKeyException ex) {
            JOptionPane.showMessageDialog(null, "La llave no es la correcta.");
        }
    }//GEN-LAST:event_botonAnadir1MousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel botonAnadir1;
    private javax.swing.JTextField cantidadField;
    private javax.swing.JTextField descripcionField;
    private javax.swing.JTextField destinoField;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    // End of variables declaration//GEN-END:variables
}
